/*Create a table  PROJECTS*/
CREATE TABLE PROJECTS(
PROJECT_NUMBER  integer PRIMARY KEY,
PROJECT_NAME    VARCHAR(20),
PROJECT_CITY    VARCHAR(20));

/*Create few records in the  above table*/
INSERT INTO PROJECTS VALUES(1,'EAGLE','NY');
INSERT INTO PROJECTS VALUES(2,'SUPER JET','LA');

COMMIT;

/* Create the table WORKON*/
CREATE TABLE WORKON(
PROJECT_NUMBER  integer,
EMP_ID  INTEGER,
PRIMARY KEY (PROJECT_NUMBER , EMP_ID),
FOREIGN KEY(PROJECT_NUMBER ) REFERENCES PROJECTS(PROJECT_NUMBER ),
FOREIGN KEY(EMP_ID) REFERENCES  EMPLOYEES(EMP_ID));

/*Insert few records in the above table*/
INSERT INTO WORKON VALUES(1,10);
INSERT INTO WORKON VALUES(1,11);
INSERT INTO WORKON VALUES(2,10);
INSERT INTO WORKON VALUES(2,20);
INSERT INTO WORKON VALUES(2,11);

COMMIT;

/*Create the table  EMPLOYEES*/
CREATE TABLE EMPLOYEES(
EMP_ID INTEGER PRIMARY KEY,
EMP_NAME   VARCHAR(20),
RATE_CATEGORY  CHAR(1),
EMP_CITY  VARCHAR(20),
FOREIGN KEY(RATE_CATEGORY ) REFERENCES  RATE(RATE_CATEGORY ));

/*Create few records in the above table*/
INSERT INTO EMPLOYEES VALUES(10,'SMITH','B','NY');
INSERT INTO EMPLOYEES VALUES(11,'ESMITH','C','SF');
INSERT INTO EMPLOYEES VALUES(20,'SMITHE','C','LA');
INSERT INTO EMPLOYEES VALUES(15,'ESMITHE','D','SD');

COMMIT;

/*Create the table RATE*/
CREATE TABLE RATE(
RATE_CATEGORY   CHAR(1) PRIMARY KEY,
RATE           INTEGER
);

/*Insert few records in the above table*/
INSERT INTO RATE VALUES('A',100);
INSERT INTO RATE VALUES('B',80);
INSERT INTO RATE VALUES('C',60);
INSERT INTO RATE VALUES('D',50);

COMMIT;

/*Week1_Homework*/
/************Question 1**********/
--1.	Find the names of employees who work on the Eagle project and has a rate greater than 70.
SELECT EMPLOYEES.EMP_NAME FROM PROJECTS
JOIN
WORKON ON PROJECTS.PROJECT_NUMBER =WORKON.PROJECT_NUMBER
JOIN
EMPLOYEES ON WORKON.EMP_ID=EMPLOYEES.EMP_ID
JOIN
RATE ON EMPLOYEES.RATE_CATEGORY =RATE.RATE_CATEGORY
WHERE PROJECTS.PROJECT_NAME ='EAGLE' AND RATE.RATE > 70;

/*************Homework 2************/
--2.	Find the names of the projects that have employees with rates greater or equal to 80.
SELECT PROJECTS.PROJECT_NAME  FROM PROJECTS 
JOIN 
WORKON ON PROJECTS.PROJECT_NUMBER=WORKON.PROJECT_NUMBER
JOIN
EMPLOYEES ON WORKON.EMP_ID = EMPLOYEES.EMP_ID
JOIN
RATE ON EMPLOYEES.RATE_CATEGORY = RATE.RATE_CATEGORY
WHERE RATE.RATE >= 80;

/************QUESTION 3**************/
--3.	Find the names of the employees who work on projects that are
--located in the same city where the employees are located.
SELECT EMPLOYEES.EMP_NAME FROM PROJECTS
JOIN
WORKON ON PROJECTS.PROJECT_NUMBER = WORKON.PROJECT_NUMBER
JOIN
EMPLOYEES ON WORKON.EMP_ID = EMPLOYEES.EMP_ID
JOIN
RATE ON EMPLOYEES.RATE_CATEGORY = RATE.RATE_CATEGORY
WHERE EMPLOYEES.EMP_CITY = PROJECTS.PROJECT_CITY ;

/***************QUESTION 4******************/
--4.	Find the names of employees who are not working on any projects.
SELECT EMP_NAME FROM EMPLOYEES 
WHERE EMP_ID NOT IN(SELECT EMPLOYEES.EMP_ID FROM PROJECTS
JOIN
WORKON ON PROJECTS.PROJECT_NUMBER = WORKON.PROJECT_NUMBER
JOIN
EMPLOYEES ON WORKON.EMP_ID = EMPLOYEES.EMP_ID
JOIN
RATE ON EMPLOYEES.RATE_CATEGORY = RATE.RATE_CATEGORY );

/*************QUESTION 5***************/
--5.	Find the average rate of the employees who work on project Eagle.
SELECT AVG(RATE.RATE) FROM PROJECTS
JOIN
WORKON ON PROJECTS.PROJECT_NUMBER = WORKON.PROJECT_NUMBER
JOIN
EMPLOYEES ON WORKON.EMP_ID = EMPLOYEES.EMP_ID
JOIN
RATE ON EMPLOYEES.RATE_CATEGORY = RATE.RATE_CATEGORY
WHERE PROJECTS.PROJECT_NAME = 'EAGLE';

/**************QUESTION 6****************/
--6.	Find the names of the employees who work on more than one project.  
--Display the results in descending order.
